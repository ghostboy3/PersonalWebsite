{"version":3,"sources":["../node_modules/property-information/lib/util/create.js","../node_modules/property-information/normalize.js","../node_modules/property-information/lib/util/types.js","../node_modules/property-information/lib/util/schema.js","../node_modules/property-information/lib/util/defined-info.js","../node_modules/property-information/lib/util/info.js","../node_modules/property-information/lib/util/case-insensitive-transform.js","../node_modules/is-decimal/index.js","../node_modules/refractor/lang/markup.js","../node_modules/refractor/lang/css.js","../node_modules/refractor/lang/clike.js","../node_modules/refractor/lang/javascript.js","../node_modules/hastscript/index.js","../node_modules/hastscript/html.js","../node_modules/property-information/html.js","../node_modules/property-information/lib/util/merge.js","../node_modules/property-information/lib/xlink.js","../node_modules/property-information/lib/xml.js","../node_modules/property-information/lib/xmlns.js","../node_modules/property-information/lib/util/case-sensitive-transform.js","../node_modules/property-information/lib/aria.js","../node_modules/property-information/lib/html.js","../node_modules/hastscript/factory.js","../node_modules/property-information/find.js","../node_modules/hast-util-parse-selector/index.js","../node_modules/space-separated-tokens/index.js","../node_modules/comma-separated-tokens/index.js","../node_modules/parse-entities/index.js","../node_modules/is-hexadecimal/index.js","../node_modules/is-alphanumerical/index.js","../node_modules/is-alphabetical/index.js","../node_modules/parse-entities/decode-entity.browser.js","../node_modules/refractor/node_modules/prismjs/components/prism-core.js","../node_modules/refractor/core.js"],"names":["normalize","__webpack_require__","Schema","DefinedInfo","module","exports","definition","prop","info","space","mustUseProperty","attributes","props","properties","transform","property","normal","indexOf","attribute","value","toLowerCase","powers","increment","Math","pow","boolean","booleanish","overloadedBoolean","number","spaceSeparated","commaSeparated","commaOrSpaceSeparated","proto","prototype","this","Info","types","defined","checks","checksLength","length","mask","check","index","mark","call","values","key","caseSensitiveTransform","character","code","charCodeAt","markup","Prism","languages","comment","prolog","doctype","cdata","tag","pattern","greedy","inside","punctuation","namespace","attr-value","lookbehind","attr-name","entity","hooks","add","env","type","content","replace","Object","defineProperty","tagName","lang","includedCdataInside","included-cdata","def","RegExp","source","insertBefore","xml","extend","html","mathml","svg","displayName","aliases","css","string","atrule","rule","url","function","selector","important","rest","addInlined","style-attr","alias","clike","class-name","keyword","operator","javascript","regex","function-variable","parameter","constant","template-string","template-punctuation","interpolation","interpolation-punctuation","js","schema","factory","merge","xlink","xmlns","aria","xtend","definitions","push","apply","create","_","slice","xLinkActuate","xLinkArcRole","xLinkHref","xLinkRole","xLinkShow","xLinkTitle","xLinkType","xmlLang","xmlBase","xmlSpace","caseInsensitiveTransform","xmlnsxlink","xmlnsXLink","ariaActiveDescendant","ariaAtomic","ariaAutoComplete","ariaBusy","ariaChecked","ariaColCount","ariaColIndex","ariaColSpan","ariaControls","ariaCurrent","ariaDescribedBy","ariaDetails","ariaDisabled","ariaDropEffect","ariaErrorMessage","ariaExpanded","ariaFlowTo","ariaGrabbed","ariaHasPopup","ariaHidden","ariaInvalid","ariaKeyShortcuts","ariaLabel","ariaLabelledBy","ariaLevel","ariaLive","ariaModal","ariaMultiLine","ariaMultiSelectable","ariaOrientation","ariaOwns","ariaPlaceholder","ariaPosInSet","ariaPressed","ariaReadOnly","ariaRelevant","ariaRequired","ariaRoleDescription","ariaRowCount","ariaRowIndex","ariaRowSpan","ariaSelected","ariaSetSize","ariaSort","ariaValueMax","ariaValueMin","ariaValueNow","ariaValueText","role","acceptcharset","classname","htmlfor","httpequiv","abbr","accept","acceptCharset","accessKey","action","allow","allowFullScreen","allowPaymentRequest","allowUserMedia","alt","as","async","autoCapitalize","autoComplete","autoFocus","autoPlay","capture","charSet","checked","cite","className","cols","colSpan","contentEditable","controls","controlsList","coords","crossOrigin","data","dateTime","decoding","default","defer","dir","dirName","disabled","download","draggable","encType","enterKeyHint","form","formAction","formEncType","formMethod","formNoValidate","formTarget","headers","height","hidden","high","href","hrefLang","htmlFor","httpEquiv","id","imageSizes","imageSrcSet","inputMode","integrity","is","isMap","itemId","itemProp","itemRef","itemScope","itemType","kind","label","language","list","loading","loop","low","manifest","max","maxLength","media","method","min","minLength","multiple","muted","name","nonce","noModule","noValidate","onAbort","onAfterPrint","onAuxClick","onBeforePrint","onBeforeUnload","onBlur","onCancel","onCanPlay","onCanPlayThrough","onChange","onClick","onClose","onContextMenu","onCopy","onCueChange","onCut","onDblClick","onDrag","onDragEnd","onDragEnter","onDragExit","onDragLeave","onDragOver","onDragStart","onDrop","onDurationChange","onEmptied","onEnded","onError","onFocus","onFormData","onHashChange","onInput","onInvalid","onKeyDown","onKeyPress","onKeyUp","onLanguageChange","onLoad","onLoadedData","onLoadedMetadata","onLoadEnd","onLoadStart","onMessage","onMessageError","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseOver","onMouseUp","onOffline","onOnline","onPageHide","onPageShow","onPaste","onPause","onPlay","onPlaying","onPopState","onProgress","onRateChange","onRejectionHandled","onReset","onResize","onScroll","onSecurityPolicyViolation","onSeeked","onSeeking","onSelect","onSlotChange","onStalled","onStorage","onSubmit","onSuspend","onTimeUpdate","onToggle","onUnhandledRejection","onUnload","onVolumeChange","onWaiting","onWheel","open","optimum","ping","placeholder","playsInline","poster","preload","readOnly","referrerPolicy","rel","required","reversed","rows","rowSpan","sandbox","scope","scoped","seamless","selected","shape","size","sizes","slot","span","spellCheck","src","srcDoc","srcLang","srcSet","start","step","style","tabIndex","target","title","translate","typeMustMatch","useMap","width","wrap","align","aLink","archive","axis","background","bgColor","border","borderColor","bottomMargin","cellPadding","cellSpacing","char","charOff","classId","clear","codeBase","codeType","color","compact","declare","event","face","frame","frameBorder","hSpace","leftMargin","link","longDesc","lowSrc","marginHeight","marginWidth","noResize","noHref","noShade","noWrap","object","profile","prompt","rev","rightMargin","rules","scheme","scrolling","standby","summary","text","topMargin","valueType","version","vAlign","vLink","vSpace","allowTransparency","autoCorrect","autoSave","disablePictureInPicture","disableRemotePlayback","prefix","results","security","unselectable","find","parseSelector","spaces","parse","commas","defaultTagName","caseSensitive","adjust","result","createAdjustMap","node","children","Array","arguments","own","isNode","isChildren","unshift","addProperty","addChild","nodes","Error","String","undefined","join","concat","parsePrimitive","parsePrimitives","hasOwnProperty","positiveNumber","isNaN","Number","Type","valid","test","charAt","dash","camelcase","toUpperCase","datasetToProperty","cap","kebab","datasetToAttribute","$0","subvalue","previous","match","search","lastIndex","exec","input","empty","trim","split","whiteSpace","stringify","val","comma","end","options","settings","left","padLeft","right","padRight","legacy","invalid","decimal","hexadecimal","alphanumerical","decodeEntity","option","defaults","position","indent","entityCharacters","namedEntity","terminated","characters","reference","following","warning","reason","output","begin","prev","next","diff","additional","nonTerminated","handleText","handleReference","handleWarning","textContext","referenceContext","warningContext","pos","lines","column","line","queue","now","offset","messages","noop","lineFeed","ampersand","tab","formFeed","lessThan","fromCharCode","numberSign","uppercaseX","lowercaseX","hexa","deci","tests","semicolon","namedUnknown","namedNotTerminated","namedEmpty","equalsTo","numericNotTerminated","parseInt","bases","numericProhibited","replacementCharacter","numericDisallowed","disallowed","numericEmpty","flush","Function","alphabetical","el","document","createElement","innerHTML","textContent","global","_self","uniqueId","manual","disableWorkerMessageHandler","util","encode","tokens","Token","isArray","map","o","toString","objId","obj","clone","deepClone","visited","forEach","v","i","redef","before","insert","root","grammar","ret","token","newToken","old","DFS","callback","propertyType","plugins","highlightAll","highlightAllUnder","container","run","element","elements","querySelectorAll","highlightElement","parent","parentNode","nodeName","insertHighlightedCode","highlightedCode","Worker","worker","filename","onmessage","evt","postMessage","JSON","immediateClose","highlight","tokenize","matchGrammar","strarr","startPos","oneshot","patterns","j","lookbehindLength","flags","str","from","to","k","p","len","delNum","after","args","wrapped","splice","all","callbacks","matchedStr","classes","keys","addEventListener","message","close","script","currentScript","getElementsByTagName","pop","hasAttribute","readyState","window","requestAnimationFrame","setTimeout","WorkerGlobalScope","self","restore","current","h","decode","Refractor","refract","register","sup","registered","listLanguages","stringifyAll","attrs"],"mappings":"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","file":"static/js/154.dba04dd4.chunk.js","sourcesContent":["'use strict';\n\nvar normalize = require('../../normalize');\nvar Schema = require('./schema');\nvar DefinedInfo = require('./defined-info');\nmodule.exports = create;\nfunction create(definition) {\n  var space = definition.space;\n  var mustUseProperty = definition.mustUseProperty || [];\n  var attributes = definition.attributes || {};\n  var props = definition.properties;\n  var transform = definition.transform;\n  var property = {};\n  var normal = {};\n  var prop;\n  var info;\n  for (prop in props) {\n    info = new DefinedInfo(prop, transform(attributes, prop), props[prop], space);\n    if (mustUseProperty.indexOf(prop) !== -1) {\n      info.mustUseProperty = true;\n    }\n    property[prop] = info;\n    normal[normalize(prop)] = prop;\n    normal[normalize(info.attribute)] = prop;\n  }\n  return new Schema(property, normal, space);\n}","'use strict';\n\nmodule.exports = normalize;\nfunction normalize(value) {\n  return value.toLowerCase();\n}","'use strict';\n\nvar powers = 0;\nexports.boolean = increment();\nexports.booleanish = increment();\nexports.overloadedBoolean = increment();\nexports.number = increment();\nexports.spaceSeparated = increment();\nexports.commaSeparated = increment();\nexports.commaOrSpaceSeparated = increment();\nfunction increment() {\n  return Math.pow(2, ++powers);\n}","'use strict';\n\nmodule.exports = Schema;\nvar proto = Schema.prototype;\nproto.space = null;\nproto.normal = {};\nproto.property = {};\nfunction Schema(property, normal, space) {\n  this.property = property;\n  this.normal = normal;\n  if (space) {\n    this.space = space;\n  }\n}","'use strict';\n\nvar Info = require('./info');\nvar types = require('./types');\nmodule.exports = DefinedInfo;\nDefinedInfo.prototype = new Info();\nDefinedInfo.prototype.defined = true;\nvar checks = ['boolean', 'booleanish', 'overloadedBoolean', 'number', 'commaSeparated', 'spaceSeparated', 'commaOrSpaceSeparated'];\nvar checksLength = checks.length;\nfunction DefinedInfo(property, attribute, mask, space) {\n  var index = -1;\n  var check;\n  mark(this, 'space', space);\n  Info.call(this, property, attribute);\n  while (++index < checksLength) {\n    check = checks[index];\n    mark(this, check, (mask & types[check]) === types[check]);\n  }\n}\nfunction mark(values, key, value) {\n  if (value) {\n    values[key] = value;\n  }\n}","'use strict';\n\nmodule.exports = Info;\nvar proto = Info.prototype;\nproto.space = null;\nproto.attribute = null;\nproto.property = null;\nproto.boolean = false;\nproto.booleanish = false;\nproto.overloadedBoolean = false;\nproto.number = false;\nproto.commaSeparated = false;\nproto.spaceSeparated = false;\nproto.commaOrSpaceSeparated = false;\nproto.mustUseProperty = false;\nproto.defined = false;\nfunction Info(property, attribute) {\n  this.property = property;\n  this.attribute = attribute;\n}","'use strict';\n\nvar caseSensitiveTransform = require('./case-sensitive-transform');\nmodule.exports = caseInsensitiveTransform;\nfunction caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase());\n}","'use strict';\n\nmodule.exports = decimal;\n\n// Check if the given character code, or the character code at the first\n// character, is decimal.\nfunction decimal(character) {\n  var code = typeof character === 'string' ? character.charCodeAt(0) : character;\n  return code >= 48 && code <= 57; /* 0-9 */\n}","'use strict';\n\nmodule.exports = markup;\nmarkup.displayName = 'markup';\nmarkup.aliases = ['xml', 'html', 'mathml', 'svg'];\nfunction markup(Prism) {\n  Prism.languages.markup = {\n    comment: /<!--[\\s\\S]*?-->/,\n    prolog: /<\\?[\\s\\S]+?\\?>/,\n    doctype: /<!DOCTYPE[\\s\\S]+?>/i,\n    cdata: /<!\\[CDATA\\[[\\s\\S]*?]]>/i,\n    tag: {\n      pattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/i,\n      greedy: true,\n      inside: {\n        tag: {\n          pattern: /^<\\/?[^\\s>\\/]+/i,\n          inside: {\n            punctuation: /^<\\/?/,\n            namespace: /^[^\\s>\\/:]+:/\n          }\n        },\n        'attr-value': {\n          pattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/i,\n          inside: {\n            punctuation: [/^=/, {\n              pattern: /^(\\s*)[\"']|[\"']$/,\n              lookbehind: true\n            }]\n          }\n        },\n        punctuation: /\\/?>/,\n        'attr-name': {\n          pattern: /[^\\s>\\/]+/,\n          inside: {\n            namespace: /^[^\\s>\\/:]+:/\n          }\n        }\n      }\n    },\n    entity: /&#?[\\da-z]{1,8};/i\n  };\n  Prism.languages.markup['tag'].inside['attr-value'].inside['entity'] = Prism.languages.markup['entity']; // Plugin to make entity title show the real entity, idea by Roman Komarov\n  Prism.hooks.add('wrap', function (env) {\n    if (env.type === 'entity') {\n      env.attributes['title'] = env.content.value.replace(/&amp;/, '&');\n    }\n  });\n  Object.defineProperty(Prism.languages.markup.tag, 'addInlined', {\n    /**\n     * Adds an inlined language to markup.\n     *\n     * An example of an inlined language is CSS with `<style>` tags.\n     *\n     * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n     * case insensitive.\n     * @param {string} lang The language key.\n     * @example\n     * addInlined('style', 'css');\n     */\n    value: function addInlined(tagName, lang) {\n      var includedCdataInside = {};\n      includedCdataInside['language-' + lang] = {\n        pattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n        lookbehind: true,\n        inside: Prism.languages[lang]\n      };\n      includedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i;\n      var inside = {\n        'included-cdata': {\n          pattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n          inside: includedCdataInside\n        }\n      };\n      inside['language-' + lang] = {\n        pattern: /[\\s\\S]+/,\n        inside: Prism.languages[lang]\n      };\n      var def = {};\n      def[tagName] = {\n        pattern: RegExp(/(<__[\\s\\S]*?>)(?:<!\\[CDATA\\[[\\s\\S]*?\\]\\]>\\s*|[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g, tagName), 'i'),\n        lookbehind: true,\n        greedy: true,\n        inside: inside\n      };\n      Prism.languages.insertBefore('markup', 'cdata', def);\n    }\n  });\n  Prism.languages.xml = Prism.languages.extend('markup', {});\n  Prism.languages.html = Prism.languages.markup;\n  Prism.languages.mathml = Prism.languages.markup;\n  Prism.languages.svg = Prism.languages.markup;\n}","'use strict';\n\nmodule.exports = css;\ncss.displayName = 'css';\ncss.aliases = [];\nfunction css(Prism) {\n  ;\n  (function (Prism) {\n    var string = /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/;\n    Prism.languages.css = {\n      comment: /\\/\\*[\\s\\S]*?\\*\\//,\n      atrule: {\n        pattern: /@[\\w-]+[\\s\\S]*?(?:;|(?=\\s*\\{))/,\n        inside: {\n          rule: /@[\\w-]+/ // See rest below\n        }\n      },\n\n      url: {\n        pattern: RegExp('url\\\\((?:' + string.source + '|[^\\n\\r()]*)\\\\)', 'i'),\n        inside: {\n          function: /^url/i,\n          punctuation: /^\\(|\\)$/\n        }\n      },\n      selector: RegExp('[^{}\\\\s](?:[^{};\"\\']|' + string.source + ')*?(?=\\\\s*\\\\{)'),\n      string: {\n        pattern: string,\n        greedy: true\n      },\n      property: /[-_a-z\\xA0-\\uFFFF][-\\w\\xA0-\\uFFFF]*(?=\\s*:)/i,\n      important: /!important\\b/i,\n      function: /[-a-z0-9]+(?=\\()/i,\n      punctuation: /[(){};:,]/\n    };\n    Prism.languages.css['atrule'].inside.rest = Prism.languages.css;\n    var markup = Prism.languages.markup;\n    if (markup) {\n      markup.tag.addInlined('style', 'css');\n      Prism.languages.insertBefore('inside', 'attr-value', {\n        'style-attr': {\n          pattern: /\\s*style=(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/i,\n          inside: {\n            'attr-name': {\n              pattern: /^\\s*style/i,\n              inside: markup.tag.inside\n            },\n            punctuation: /^\\s*=\\s*['\"]|['\"]\\s*$/,\n            'attr-value': {\n              pattern: /.+/i,\n              inside: Prism.languages.css\n            }\n          },\n          alias: 'language-css'\n        }\n      }, markup.tag);\n    }\n  })(Prism);\n}","'use strict';\n\nmodule.exports = clike;\nclike.displayName = 'clike';\nclike.aliases = [];\nfunction clike(Prism) {\n  Prism.languages.clike = {\n    comment: [{\n      pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n      lookbehind: true\n    }, {\n      pattern: /(^|[^\\\\:])\\/\\/.*/,\n      lookbehind: true,\n      greedy: true\n    }],\n    string: {\n      pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    'class-name': {\n      pattern: /((?:\\b(?:class|interface|extends|implements|trait|instanceof|new)\\s+)|(?:catch\\s+\\())[\\w.\\\\]+/i,\n      lookbehind: true,\n      inside: {\n        punctuation: /[.\\\\]/\n      }\n    },\n    keyword: /\\b(?:if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\\b/,\n    boolean: /\\b(?:true|false)\\b/,\n    function: /\\w+(?=\\()/,\n    number: /\\b0x[\\da-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n    operator: /--?|\\+\\+?|!=?=?|<=?|>=?|==?=?|&&?|\\|\\|?|\\?|\\*|\\/|~|\\^|%/,\n    punctuation: /[{}[\\];(),.:]/\n  };\n}","'use strict';\n\nmodule.exports = javascript;\njavascript.displayName = 'javascript';\njavascript.aliases = ['js'];\nfunction javascript(Prism) {\n  Prism.languages.javascript = Prism.languages.extend('clike', {\n    'class-name': [Prism.languages.clike['class-name'], {\n      pattern: /(^|[^$\\w\\xA0-\\uFFFF])[_$A-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\.(?:prototype|constructor))/,\n      lookbehind: true\n    }],\n    keyword: [{\n      pattern: /((?:^|})\\s*)(?:catch|finally)\\b/,\n      lookbehind: true\n    }, {\n      pattern: /(^|[^.])\\b(?:as|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n      lookbehind: true\n    }],\n    number: /\\b(?:(?:0[xX](?:[\\dA-Fa-f](?:_[\\dA-Fa-f])?)+|0[bB](?:[01](?:_[01])?)+|0[oO](?:[0-7](?:_[0-7])?)+)n?|(?:\\d(?:_\\d)?)+n|NaN|Infinity)\\b|(?:\\b(?:\\d(?:_\\d)?)+\\.?(?:\\d(?:_\\d)?)*|\\B\\.(?:\\d(?:_\\d)?)+)(?:[Ee][+-]?(?:\\d(?:_\\d)?)+)?/,\n    // Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n    function: /#?[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n    operator: /-[-=]?|\\+[+=]?|!=?=?|<<?=?|>>?>?=?|=(?:==?|>)?|&[&=]?|\\|[|=]?|\\*\\*?=?|\\/=?|~|\\^=?|%=?|\\?|\\.{3}/\n  });\n  Prism.languages.javascript['class-name'][0].pattern = /(\\b(?:class|interface|extends|implements|instanceof|new)\\s+)[\\w.\\\\]+/;\n  Prism.languages.insertBefore('javascript', 'keyword', {\n    regex: {\n      pattern: /((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s])\\s*)\\/(\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[gimyus]{0,6}(?=\\s*($|[\\r\\n,.;})\\]]))/,\n      lookbehind: true,\n      greedy: true\n    },\n    // This must be declared before keyword because we use \"function\" inside the look-forward\n    'function-variable': {\n      pattern: /#?[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)\\s*=>))/,\n      alias: 'function'\n    },\n    parameter: [{\n      pattern: /(function(?:\\s+[_$A-Za-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)?\\s*\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\))/,\n      lookbehind: true,\n      inside: Prism.languages.javascript\n    }, {\n      pattern: /[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*=>)/i,\n      inside: Prism.languages.javascript\n    }, {\n      pattern: /(\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\)\\s*=>)/,\n      lookbehind: true,\n      inside: Prism.languages.javascript\n    }, {\n      pattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:[_$A-Za-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*\\s*)\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\)\\s*\\{)/,\n      lookbehind: true,\n      inside: Prism.languages.javascript\n    }],\n    constant: /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n  });\n  Prism.languages.insertBefore('javascript', 'string', {\n    'template-string': {\n      pattern: /`(?:\\\\[\\s\\S]|\\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}|(?!\\${)[^\\\\`])*`/,\n      greedy: true,\n      inside: {\n        'template-punctuation': {\n          pattern: /^`|`$/,\n          alias: 'string'\n        },\n        interpolation: {\n          pattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}/,\n          lookbehind: true,\n          inside: {\n            'interpolation-punctuation': {\n              pattern: /^\\${|}$/,\n              alias: 'punctuation'\n            },\n            rest: Prism.languages.javascript\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    }\n  });\n  if (Prism.languages.markup) {\n    Prism.languages.markup.tag.addInlined('script', 'javascript');\n  }\n  Prism.languages.js = Prism.languages.javascript;\n}","'use strict';\n\nmodule.exports = require('./html');","'use strict';\n\nvar schema = require('property-information/html');\nvar factory = require('./factory');\nvar html = factory(schema, 'div');\nhtml.displayName = 'html';\nmodule.exports = html;","'use strict';\n\nvar merge = require('./lib/util/merge');\nvar xlink = require('./lib/xlink');\nvar xml = require('./lib/xml');\nvar xmlns = require('./lib/xmlns');\nvar aria = require('./lib/aria');\nvar html = require('./lib/html');\nmodule.exports = merge([xml, xlink, xmlns, aria, html]);","'use strict';\n\nvar xtend = require('xtend');\nvar Schema = require('./schema');\nmodule.exports = merge;\nfunction merge(definitions) {\n  var length = definitions.length;\n  var property = [];\n  var normal = [];\n  var index = -1;\n  var info;\n  var space;\n  while (++index < length) {\n    info = definitions[index];\n    property.push(info.property);\n    normal.push(info.normal);\n    space = info.space;\n  }\n  return new Schema(xtend.apply(null, property), xtend.apply(null, normal), space);\n}","'use strict';\n\nvar create = require('./util/create');\nmodule.exports = create({\n  space: 'xlink',\n  transform: xlinkTransform,\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n});\nfunction xlinkTransform(_, prop) {\n  return 'xlink:' + prop.slice(5).toLowerCase();\n}","'use strict';\n\nvar create = require('./util/create');\nmodule.exports = create({\n  space: 'xml',\n  transform: xmlTransform,\n  properties: {\n    xmlLang: null,\n    xmlBase: null,\n    xmlSpace: null\n  }\n});\nfunction xmlTransform(_, prop) {\n  return 'xml:' + prop.slice(3).toLowerCase();\n}","'use strict';\n\nvar create = require('./util/create');\nvar caseInsensitiveTransform = require('./util/case-insensitive-transform');\nmodule.exports = create({\n  space: 'xmlns',\n  attributes: {\n    xmlnsxlink: 'xmlns:xlink'\n  },\n  transform: caseInsensitiveTransform,\n  properties: {\n    xmlns: null,\n    xmlnsXLink: null\n  }\n});","'use strict';\n\nmodule.exports = caseSensitiveTransform;\nfunction caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute;\n}","'use strict';\n\nvar types = require('./util/types');\nvar create = require('./util/create');\nvar booleanish = types.booleanish;\nvar number = types.number;\nvar spaceSeparated = types.spaceSeparated;\nmodule.exports = create({\n  transform: ariaTransform,\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n});\nfunction ariaTransform(_, prop) {\n  return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase();\n}","'use strict';\n\nvar types = require('./util/types');\nvar create = require('./util/create');\nvar caseInsensitiveTransform = require('./util/case-insensitive-transform');\nvar boolean = types.boolean;\nvar overloadedBoolean = types.overloadedBoolean;\nvar booleanish = types.booleanish;\nvar number = types.number;\nvar spaceSeparated = types.spaceSeparated;\nvar commaSeparated = types.commaSeparated;\nmodule.exports = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    capture: boolean,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: commaSeparated,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforePrint: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextMenu: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: commaSeparated,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null,\n    // Several. Use CSS `text-align` instead,\n    aLink: null,\n    // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated,\n    // `<object>`. List of URIs to archives\n    axis: null,\n    // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null,\n    // `<body>`. Use CSS `background-image` instead\n    bgColor: null,\n    // `<body>` and table elements. Use CSS `background-color` instead\n    border: number,\n    // `<table>`. Use CSS `border-width` instead,\n    borderColor: null,\n    // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number,\n    // `<body>`\n    cellPadding: null,\n    // `<table>`\n    cellSpacing: null,\n    // `<table>`\n    char: null,\n    // Several table elements. When `align=char`, sets the character to align on\n    charOff: null,\n    // Several table elements. When `char`, offsets the alignment\n    classId: null,\n    // `<object>`\n    clear: null,\n    // `<br>`. Use CSS `clear` instead\n    code: null,\n    // `<object>`\n    codeBase: null,\n    // `<object>`\n    codeType: null,\n    // `<object>`\n    color: null,\n    // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean,\n    // Lists. Use CSS to reduce space between items instead\n    declare: boolean,\n    // `<object>`\n    event: null,\n    // `<script>`\n    face: null,\n    // `<font>`. Use CSS instead\n    frame: null,\n    // `<table>`\n    frameBorder: null,\n    // `<iframe>`. Use CSS `border` instead\n    hSpace: number,\n    // `<img>` and `<object>`\n    leftMargin: number,\n    // `<body>`\n    link: null,\n    // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null,\n    // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null,\n    // `<img>`. Use a `<picture>`\n    marginHeight: number,\n    // `<body>`\n    marginWidth: number,\n    // `<body>`\n    noResize: boolean,\n    // `<frame>`\n    noHref: boolean,\n    // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean,\n    // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean,\n    // `<td>` and `<th>`\n    object: null,\n    // `<applet>`\n    profile: null,\n    // `<head>`\n    prompt: null,\n    // `<isindex>`\n    rev: null,\n    // `<link>`\n    rightMargin: number,\n    // `<body>`\n    rules: null,\n    // `<table>`\n    scheme: null,\n    // `<meta>`\n    scrolling: booleanish,\n    // `<frame>`. Use overflow in the child context\n    standby: null,\n    // `<object>`\n    summary: null,\n    // `<table>`\n    text: null,\n    // `<body>`. Use CSS `color` instead\n    topMargin: number,\n    // `<body>`\n    valueType: null,\n    // `<param>`\n    version: null,\n    // `<html>`. Use a doctype.\n    vAlign: null,\n    // Several. Use CSS `vertical-align` instead\n    vLink: null,\n    // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number,\n    // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n});","'use strict';\n\nvar find = require('property-information/find');\nvar normalize = require('property-information/normalize');\nvar parseSelector = require('hast-util-parse-selector');\nvar spaces = require('space-separated-tokens').parse;\nvar commas = require('comma-separated-tokens').parse;\nmodule.exports = factory;\nvar own = {}.hasOwnProperty;\nfunction factory(schema, defaultTagName, caseSensitive) {\n  var adjust = caseSensitive ? createAdjustMap(caseSensitive) : null;\n  return h;\n\n  // Hyperscript compatible DSL for creating virtual hast trees.\n  function h(selector, properties) {\n    var node = parseSelector(selector, defaultTagName);\n    var children = Array.prototype.slice.call(arguments, 2);\n    var name = node.tagName.toLowerCase();\n    var property;\n    node.tagName = adjust && own.call(adjust, name) ? adjust[name] : name;\n    if (properties && isChildren(properties, node)) {\n      children.unshift(properties);\n      properties = null;\n    }\n    if (properties) {\n      for (property in properties) {\n        addProperty(node.properties, property, properties[property]);\n      }\n    }\n    addChild(node.children, children);\n    if (node.tagName === 'template') {\n      node.content = {\n        type: 'root',\n        children: node.children\n      };\n      node.children = [];\n    }\n    return node;\n  }\n  function addProperty(properties, key, value) {\n    var info;\n    var property;\n    var result;\n\n    // Ignore nully and NaN values.\n    if (value === null || value === undefined || value !== value) {\n      return;\n    }\n    info = find(schema, key);\n    property = info.property;\n    result = value;\n\n    // Handle list values.\n    if (typeof result === 'string') {\n      if (info.spaceSeparated) {\n        result = spaces(result);\n      } else if (info.commaSeparated) {\n        result = commas(result);\n      } else if (info.commaOrSpaceSeparated) {\n        result = spaces(commas(result).join(' '));\n      }\n    }\n\n    // Accept `object` on style.\n    if (property === 'style' && typeof value !== 'string') {\n      result = style(result);\n    }\n\n    // Class-names (which can be added both on the `selector` and here).\n    if (property === 'className' && properties.className) {\n      result = properties.className.concat(result);\n    }\n    properties[property] = parsePrimitives(info, property, result);\n  }\n}\nfunction isChildren(value, node) {\n  return typeof value === 'string' || 'length' in value || isNode(node.tagName, value);\n}\nfunction isNode(tagName, value) {\n  var type = value.type;\n  if (tagName === 'input' || !type || typeof type !== 'string') {\n    return false;\n  }\n  if (typeof value.children === 'object' && 'length' in value.children) {\n    return true;\n  }\n  type = type.toLowerCase();\n  if (tagName === 'button') {\n    return type !== 'menu' && type !== 'submit' && type !== 'reset' && type !== 'button';\n  }\n  return 'value' in value;\n}\nfunction addChild(nodes, value) {\n  var index;\n  var length;\n  if (typeof value === 'string' || typeof value === 'number') {\n    nodes.push({\n      type: 'text',\n      value: String(value)\n    });\n    return;\n  }\n  if (typeof value === 'object' && 'length' in value) {\n    index = -1;\n    length = value.length;\n    while (++index < length) {\n      addChild(nodes, value[index]);\n    }\n    return;\n  }\n  if (typeof value !== 'object' || !('type' in value)) {\n    throw new Error('Expected node, nodes, or string, got `' + value + '`');\n  }\n  nodes.push(value);\n}\n\n// Parse a (list of) primitives.\nfunction parsePrimitives(info, name, value) {\n  var index;\n  var length;\n  var result;\n  if (typeof value !== 'object' || !('length' in value)) {\n    return parsePrimitive(info, name, value);\n  }\n  length = value.length;\n  index = -1;\n  result = [];\n  while (++index < length) {\n    result[index] = parsePrimitive(info, name, value[index]);\n  }\n  return result;\n}\n\n// Parse a single primitives.\nfunction parsePrimitive(info, name, value) {\n  var result = value;\n  if (info.number || info.positiveNumber) {\n    if (!isNaN(result) && result !== '') {\n      result = Number(result);\n    }\n  } else if (info.boolean || info.overloadedBoolean) {\n    // Accept `boolean` and `string`.\n    if (typeof result === 'string' && (result === '' || normalize(value) === normalize(name))) {\n      result = true;\n    }\n  }\n  return result;\n}\nfunction style(value) {\n  var result = [];\n  var key;\n  for (key in value) {\n    result.push([key, value[key]].join(': '));\n  }\n  return result.join('; ');\n}\nfunction createAdjustMap(values) {\n  var length = values.length;\n  var index = -1;\n  var result = {};\n  var value;\n  while (++index < length) {\n    value = values[index];\n    result[value.toLowerCase()] = value;\n  }\n  return result;\n}","'use strict';\n\nvar normalize = require('./normalize');\nvar DefinedInfo = require('./lib/util/defined-info');\nvar Info = require('./lib/util/info');\nvar data = 'data';\nmodule.exports = find;\nvar valid = /^data[-\\w.:]+$/i;\nvar dash = /-[a-z]/g;\nvar cap = /[A-Z]/g;\nfunction find(schema, value) {\n  var normal = normalize(value);\n  var prop = value;\n  var Type = Info;\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]];\n  }\n  if (normal.length > 4 && normal.slice(0, 4) === data && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      prop = datasetToProperty(value);\n    } else {\n      value = datasetToAttribute(value);\n    }\n    Type = DefinedInfo;\n  }\n  return new Type(prop, value);\n}\nfunction datasetToProperty(attribute) {\n  var value = attribute.slice(5).replace(dash, camelcase);\n  return data + value.charAt(0).toUpperCase() + value.slice(1);\n}\nfunction datasetToAttribute(property) {\n  var value = property.slice(4);\n  if (dash.test(value)) {\n    return property;\n  }\n  value = value.replace(cap, kebab);\n  if (value.charAt(0) !== '-') {\n    value = '-' + value;\n  }\n  return data + value;\n}\nfunction kebab($0) {\n  return '-' + $0.toLowerCase();\n}\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase();\n}","'use strict';\n\nmodule.exports = parse;\nvar search = /[#.]/g;\n\n// Create a hast element from a simple CSS selector.\nfunction parse(selector, defaultTagName) {\n  var value = selector || '';\n  var name = defaultTagName || 'div';\n  var props = {};\n  var start = 0;\n  var subvalue;\n  var previous;\n  var match;\n  while (start < value.length) {\n    search.lastIndex = start;\n    match = search.exec(value);\n    subvalue = value.slice(start, match ? match.index : value.length);\n    if (subvalue) {\n      if (!previous) {\n        name = subvalue;\n      } else if (previous === '#') {\n        props.id = subvalue;\n      } else if (props.className) {\n        props.className.push(subvalue);\n      } else {\n        props.className = [subvalue];\n      }\n      start += subvalue.length;\n    }\n    if (match) {\n      previous = match[0];\n      start++;\n    }\n  }\n  return {\n    type: 'element',\n    tagName: name,\n    properties: props,\n    children: []\n  };\n}","'use strict';\n\nexports.parse = parse;\nexports.stringify = stringify;\nvar empty = '';\nvar space = ' ';\nvar whiteSpace = /[ \\t\\n\\r\\f]+/g;\nfunction parse(value) {\n  var input = String(value || empty).trim();\n  return input === empty ? [] : input.split(whiteSpace);\n}\nfunction stringify(values) {\n  return values.join(space).trim();\n}","'use strict';\n\nexports.parse = parse;\nexports.stringify = stringify;\nvar comma = ',';\nvar space = ' ';\nvar empty = '';\n\n// Parse comma-separated tokens to an array.\nfunction parse(value) {\n  var values = [];\n  var input = String(value || empty);\n  var index = input.indexOf(comma);\n  var lastIndex = 0;\n  var end = false;\n  var val;\n  while (!end) {\n    if (index === -1) {\n      index = input.length;\n      end = true;\n    }\n    val = input.slice(lastIndex, index).trim();\n    if (val || !end) {\n      values.push(val);\n    }\n    lastIndex = index + 1;\n    index = input.indexOf(comma, lastIndex);\n  }\n  return values;\n}\n\n// Compile an array to comma-separated tokens.\n// `options.padLeft` (default: `true`) pads a space left of each token, and\n// `options.padRight` (default: `false`) pads a space to the right of each token.\nfunction stringify(values, options) {\n  var settings = options || {};\n  var left = settings.padLeft === false ? empty : space;\n  var right = settings.padRight ? space : empty;\n\n  // Ensure the last empty entry is seen.\n  if (values[values.length - 1] === empty) {\n    values = values.concat(empty);\n  }\n  return values.join(right + comma + left).trim();\n}","'use strict';\n\nvar legacy = require('character-entities-legacy');\nvar invalid = require('character-reference-invalid');\nvar decimal = require('is-decimal');\nvar hexadecimal = require('is-hexadecimal');\nvar alphanumerical = require('is-alphanumerical');\nvar decodeEntity = require('./decode-entity');\nmodule.exports = parseEntities;\nvar own = {}.hasOwnProperty;\nvar fromCharCode = String.fromCharCode;\nvar noop = Function.prototype;\n\n// Default settings.\nvar defaults = {\n  warning: null,\n  reference: null,\n  text: null,\n  warningContext: null,\n  referenceContext: null,\n  textContext: null,\n  position: {},\n  additional: null,\n  attribute: false,\n  nonTerminated: true\n};\n\n// Characters.\nvar tab = 9; // '\\t'\nvar lineFeed = 10; // '\\n'\nvar formFeed = 12; //  '\\f'\nvar space = 32; // ' '\nvar ampersand = 38; //  '&'\nvar semicolon = 59; //  ';'\nvar lessThan = 60; //  '<'\nvar equalsTo = 61; //  '='\nvar numberSign = 35; //  '#'\nvar uppercaseX = 88; //  'X'\nvar lowercaseX = 120; //  'x'\nvar replacementCharacter = 65533; // '�'\n\n// Reference types.\nvar name = 'named';\nvar hexa = 'hexadecimal';\nvar deci = 'decimal';\n\n// Map of bases.\nvar bases = {};\nbases[hexa] = 16;\nbases[deci] = 10;\n\n// Map of types to tests.\n// Each type of character reference accepts different characters.\n// This test is used to detect whether a reference has ended (as the semicolon\n// is not strictly needed).\nvar tests = {};\ntests[name] = alphanumerical;\ntests[deci] = decimal;\ntests[hexa] = hexadecimal;\n\n// Warning types.\nvar namedNotTerminated = 1;\nvar numericNotTerminated = 2;\nvar namedEmpty = 3;\nvar numericEmpty = 4;\nvar namedUnknown = 5;\nvar numericDisallowed = 6;\nvar numericProhibited = 7;\n\n// Warning messages.\nvar messages = {};\nmessages[namedNotTerminated] = 'Named character references must be terminated by a semicolon';\nmessages[numericNotTerminated] = 'Numeric character references must be terminated by a semicolon';\nmessages[namedEmpty] = 'Named character references cannot be empty';\nmessages[numericEmpty] = 'Numeric character references cannot be empty';\nmessages[namedUnknown] = 'Named character references must be known';\nmessages[numericDisallowed] = 'Numeric character references cannot be disallowed';\nmessages[numericProhibited] = 'Numeric character references cannot be outside the permissible Unicode range';\n\n// Wrap to ensure clean parameters are given to `parse`.\nfunction parseEntities(value, options) {\n  var settings = {};\n  var option;\n  var key;\n  if (!options) {\n    options = {};\n  }\n  for (key in defaults) {\n    option = options[key];\n    settings[key] = option === null || option === undefined ? defaults[key] : option;\n  }\n  if (settings.position.indent || settings.position.start) {\n    settings.indent = settings.position.indent || [];\n    settings.position = settings.position.start;\n  }\n  return parse(value, settings);\n}\n\n// Parse entities.\n// eslint-disable-next-line complexity\nfunction parse(value, settings) {\n  var additional = settings.additional;\n  var nonTerminated = settings.nonTerminated;\n  var handleText = settings.text;\n  var handleReference = settings.reference;\n  var handleWarning = settings.warning;\n  var textContext = settings.textContext;\n  var referenceContext = settings.referenceContext;\n  var warningContext = settings.warningContext;\n  var pos = settings.position;\n  var indent = settings.indent || [];\n  var length = value.length;\n  var index = 0;\n  var lines = -1;\n  var column = pos.column || 1;\n  var line = pos.line || 1;\n  var queue = '';\n  var result = [];\n  var entityCharacters;\n  var namedEntity;\n  var terminated;\n  var characters;\n  var character;\n  var reference;\n  var following;\n  var warning;\n  var reason;\n  var output;\n  var entity;\n  var begin;\n  var start;\n  var type;\n  var test;\n  var prev;\n  var next;\n  var diff;\n  var end;\n  if (typeof additional === 'string') {\n    additional = additional.charCodeAt(0);\n  }\n\n  // Cache the current point.\n  prev = now();\n\n  // Wrap `handleWarning`.\n  warning = handleWarning ? parseError : noop;\n\n  // Ensure the algorithm walks over the first character and the end (inclusive).\n  index--;\n  length++;\n  while (++index < length) {\n    // If the previous character was a newline.\n    if (character === lineFeed) {\n      column = indent[lines] || 1;\n    }\n    character = value.charCodeAt(index);\n    if (character === ampersand) {\n      following = value.charCodeAt(index + 1);\n\n      // The behaviour depends on the identity of the next character.\n      if (following === tab || following === lineFeed || following === formFeed || following === space || following === ampersand || following === lessThan || following !== following || additional && following === additional) {\n        // Not a character reference.\n        // No characters are consumed, and nothing is returned.\n        // This is not an error, either.\n        queue += fromCharCode(character);\n        column++;\n        continue;\n      }\n      start = index + 1;\n      begin = start;\n      end = start;\n      if (following === numberSign) {\n        // Numerical entity.\n        end = ++begin;\n\n        // The behaviour further depends on the next character.\n        following = value.charCodeAt(end);\n        if (following === uppercaseX || following === lowercaseX) {\n          // ASCII hex digits.\n          type = hexa;\n          end = ++begin;\n        } else {\n          // ASCII digits.\n          type = deci;\n        }\n      } else {\n        // Named entity.\n        type = name;\n      }\n      entityCharacters = '';\n      entity = '';\n      characters = '';\n      test = tests[type];\n      end--;\n      while (++end < length) {\n        following = value.charCodeAt(end);\n        if (!test(following)) {\n          break;\n        }\n        characters += fromCharCode(following);\n\n        // Check if we can match a legacy named reference.\n        // If so, we cache that as the last viable named reference.\n        // This ensures we do not need to walk backwards later.\n        if (type === name && own.call(legacy, characters)) {\n          entityCharacters = characters;\n          entity = legacy[characters];\n        }\n      }\n      terminated = value.charCodeAt(end) === semicolon;\n      if (terminated) {\n        end++;\n        namedEntity = type === name ? decodeEntity(characters) : false;\n        if (namedEntity) {\n          entityCharacters = characters;\n          entity = namedEntity;\n        }\n      }\n      diff = 1 + end - start;\n      if (!terminated && !nonTerminated) {\n        // Empty.\n      } else if (!characters) {\n        // An empty (possible) entity is valid, unless it’s numeric (thus an\n        // ampersand followed by an octothorp).\n        if (type !== name) {\n          warning(numericEmpty, diff);\n        }\n      } else if (type === name) {\n        // An ampersand followed by anything unknown, and not terminated, is\n        // invalid.\n        if (terminated && !entity) {\n          warning(namedUnknown, 1);\n        } else {\n          // If theres something after an entity name which is not known, cap\n          // the reference.\n          if (entityCharacters !== characters) {\n            end = begin + entityCharacters.length;\n            diff = 1 + end - begin;\n            terminated = false;\n          }\n\n          // If the reference is not terminated, warn.\n          if (!terminated) {\n            reason = entityCharacters ? namedNotTerminated : namedEmpty;\n            if (settings.attribute) {\n              following = value.charCodeAt(end);\n              if (following === equalsTo) {\n                warning(reason, diff);\n                entity = null;\n              } else if (alphanumerical(following)) {\n                entity = null;\n              } else {\n                warning(reason, diff);\n              }\n            } else {\n              warning(reason, diff);\n            }\n          }\n        }\n        reference = entity;\n      } else {\n        if (!terminated) {\n          // All non-terminated numeric entities are not rendered, and trigger a\n          // warning.\n          warning(numericNotTerminated, diff);\n        }\n\n        // When terminated and number, parse as either hexadecimal or decimal.\n        reference = parseInt(characters, bases[type]);\n\n        // Trigger a warning when the parsed number is prohibited, and replace\n        // with replacement character.\n        if (prohibited(reference)) {\n          warning(numericProhibited, diff);\n          reference = fromCharCode(replacementCharacter);\n        } else if (reference in invalid) {\n          // Trigger a warning when the parsed number is disallowed, and replace\n          // by an alternative.\n          warning(numericDisallowed, diff);\n          reference = invalid[reference];\n        } else {\n          // Parse the number.\n          output = '';\n\n          // Trigger a warning when the parsed number should not be used.\n          if (disallowed(reference)) {\n            warning(numericDisallowed, diff);\n          }\n\n          // Stringify the number.\n          if (reference > 0xffff) {\n            reference -= 0x10000;\n            output += fromCharCode(reference >>> (10 & 0x3ff) | 0xd800);\n            reference = 0xdc00 | reference & 0x3ff;\n          }\n          reference = output + fromCharCode(reference);\n        }\n      }\n\n      // Found it!\n      // First eat the queued characters as normal text, then eat an entity.\n      if (reference) {\n        flush();\n        prev = now();\n        index = end - 1;\n        column += end - start + 1;\n        result.push(reference);\n        next = now();\n        next.offset++;\n        if (handleReference) {\n          handleReference.call(referenceContext, reference, {\n            start: prev,\n            end: next\n          }, value.slice(start - 1, end));\n        }\n        prev = next;\n      } else {\n        // If we could not find a reference, queue the checked characters (as\n        // normal characters), and move the pointer to their end.\n        // This is possible because we can be certain neither newlines nor\n        // ampersands are included.\n        characters = value.slice(start - 1, end);\n        queue += characters;\n        column += characters.length;\n        index = end - 1;\n      }\n    } else {\n      // Handle anything other than an ampersand, including newlines and EOF.\n      if (character === 10 // Line feed\n      ) {\n        line++;\n        lines++;\n        column = 0;\n      }\n      if (character === character) {\n        queue += fromCharCode(character);\n        column++;\n      } else {\n        flush();\n      }\n    }\n  }\n\n  // Return the reduced nodes, and any possible warnings.\n  return result.join('');\n\n  // Get current position.\n  function now() {\n    return {\n      line: line,\n      column: column,\n      offset: index + (pos.offset || 0)\n    };\n  }\n\n  // “Throw” a parse-error: a warning.\n  function parseError(code, offset) {\n    var position = now();\n    position.column += offset;\n    position.offset += offset;\n    handleWarning.call(warningContext, messages[code], position, code);\n  }\n\n  // Flush `queue` (normal text).\n  // Macro invoked before each entity and at the end of `value`.\n  // Does nothing when `queue` is empty.\n  function flush() {\n    if (queue) {\n      result.push(queue);\n      if (handleText) {\n        handleText.call(textContext, queue, {\n          start: prev,\n          end: now()\n        });\n      }\n      queue = '';\n    }\n  }\n}\n\n// Check if `character` is outside the permissible unicode range.\nfunction prohibited(code) {\n  return code >= 0xd800 && code <= 0xdfff || code > 0x10ffff;\n}\n\n// Check if `character` is disallowed.\nfunction disallowed(code) {\n  return code >= 0x0001 && code <= 0x0008 || code === 0x000b || code >= 0x000d && code <= 0x001f || code >= 0x007f && code <= 0x009f || code >= 0xfdd0 && code <= 0xfdef || (code & 0xffff) === 0xffff || (code & 0xffff) === 0xfffe;\n}","'use strict';\n\nmodule.exports = hexadecimal;\n\n// Check if the given character code, or the character code at the first\n// character, is hexadecimal.\nfunction hexadecimal(character) {\n  var code = typeof character === 'string' ? character.charCodeAt(0) : character;\n  return code >= 97 /* a */ && code <= 102 /* z */ || code >= 65 /* A */ && code <= 70 /* Z */ || code >= 48 /* A */ && code <= 57 /* Z */;\n}","'use strict';\n\nvar alphabetical = require('is-alphabetical');\nvar decimal = require('is-decimal');\nmodule.exports = alphanumerical;\n\n// Check if the given character code, or the character code at the first\n// character, is alphanumerical.\nfunction alphanumerical(character) {\n  return alphabetical(character) || decimal(character);\n}","'use strict';\n\nmodule.exports = alphabetical;\n\n// Check if the given character code, or the character code at the first\n// character, is alphabetical.\nfunction alphabetical(character) {\n  var code = typeof character === 'string' ? character.charCodeAt(0) : character;\n  return code >= 97 && code <= 122 /* a-z */ || code >= 65 && code <= 90 /* A-Z */;\n}","'use strict';\n\n/* eslint-env browser */\nvar el;\nvar semicolon = 59; //  ';'\n\nmodule.exports = decodeEntity;\nfunction decodeEntity(characters) {\n  var entity = '&' + characters + ';';\n  var char;\n  el = el || document.createElement('i');\n  el.innerHTML = entity;\n  char = el.textContent;\n\n  // Some entities do not require the closing semicolon (`&not` - for instance),\n  // which leads to situations where parsing the assumed entity of &notit; will\n  // result in the string `¬it;`.  When we encounter a trailing semicolon after\n  // parsing and the entity to decode was not a semicolon (`&semi;`), we can\n  // assume that the matching was incomplete\n  if (char.charCodeAt(char.length - 1) === semicolon && characters !== 'semi') {\n    return false;\n  }\n\n  // If the decoded string is equal to the input, the entity was not valid\n  return char === entity ? false : char;\n}","var _self = typeof window !== 'undefined' ? window // if in browser\n: typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope ? self // if in worker\n: {} // if in node js\n;\n\n/**\n * Prism: Lightweight, robust, elegant syntax highlighting\n * MIT license http://www.opensource.org/licenses/mit-license.php/\n * @author Lea Verou http://lea.verou.me\n */\n\nvar Prism = function (_self) {\n  // Private helper vars\n  var lang = /\\blang(?:uage)?-([\\w-]+)\\b/i;\n  var uniqueId = 0;\n  var _ = {\n    manual: _self.Prism && _self.Prism.manual,\n    disableWorkerMessageHandler: _self.Prism && _self.Prism.disableWorkerMessageHandler,\n    util: {\n      encode: function encode(tokens) {\n        if (tokens instanceof Token) {\n          return new Token(tokens.type, _.util.encode(tokens.content), tokens.alias);\n        } else if (Array.isArray(tokens)) {\n          return tokens.map(_.util.encode);\n        } else {\n          return tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\n        }\n      },\n      type: function type(o) {\n        return Object.prototype.toString.call(o).slice(8, -1);\n      },\n      objId: function objId(obj) {\n        if (!obj['__id']) {\n          Object.defineProperty(obj, '__id', {\n            value: ++uniqueId\n          });\n        }\n        return obj['__id'];\n      },\n      // Deep clone a language definition (e.g. to extend it)\n      clone: function deepClone(o, visited) {\n        var clone,\n          id,\n          type = _.util.type(o);\n        visited = visited || {};\n        switch (type) {\n          case 'Object':\n            id = _.util.objId(o);\n            if (visited[id]) {\n              return visited[id];\n            }\n            clone = {};\n            visited[id] = clone;\n            for (var key in o) {\n              if (o.hasOwnProperty(key)) {\n                clone[key] = deepClone(o[key], visited);\n              }\n            }\n            return clone;\n          case 'Array':\n            id = _.util.objId(o);\n            if (visited[id]) {\n              return visited[id];\n            }\n            clone = [];\n            visited[id] = clone;\n            o.forEach(function (v, i) {\n              clone[i] = deepClone(v, visited);\n            });\n            return clone;\n          default:\n            return o;\n        }\n      }\n    },\n    languages: {\n      extend: function extend(id, redef) {\n        var lang = _.util.clone(_.languages[id]);\n        for (var key in redef) {\n          lang[key] = redef[key];\n        }\n        return lang;\n      },\n      /**\n       * Insert a token before another token in a language literal\n       * As this needs to recreate the object (we cannot actually insert before keys in object literals),\n       * we cannot just provide an object, we need an object and a key.\n       * @param inside The key (or language id) of the parent\n       * @param before The key to insert before.\n       * @param insert Object with the key/value pairs to insert\n       * @param root The object that contains `inside`. If equal to Prism.languages, it can be omitted.\n       */\n      insertBefore: function insertBefore(inside, before, insert, root) {\n        root = root || _.languages;\n        var grammar = root[inside];\n        var ret = {};\n        for (var token in grammar) {\n          if (grammar.hasOwnProperty(token)) {\n            if (token == before) {\n              for (var newToken in insert) {\n                if (insert.hasOwnProperty(newToken)) {\n                  ret[newToken] = insert[newToken];\n                }\n              }\n            }\n\n            // Do not insert token which also occur in insert. See #1525\n            if (!insert.hasOwnProperty(token)) {\n              ret[token] = grammar[token];\n            }\n          }\n        }\n        var old = root[inside];\n        root[inside] = ret;\n\n        // Update references in other language definitions\n        _.languages.DFS(_.languages, function (key, value) {\n          if (value === old && key != inside) {\n            this[key] = ret;\n          }\n        });\n        return ret;\n      },\n      // Traverse a language definition with Depth First Search\n      DFS: function DFS(o, callback, type, visited) {\n        visited = visited || {};\n        var objId = _.util.objId;\n        for (var i in o) {\n          if (o.hasOwnProperty(i)) {\n            callback.call(o, i, o[i], type || i);\n            var property = o[i],\n              propertyType = _.util.type(property);\n            if (propertyType === 'Object' && !visited[objId(property)]) {\n              visited[objId(property)] = true;\n              DFS(property, callback, null, visited);\n            } else if (propertyType === 'Array' && !visited[objId(property)]) {\n              visited[objId(property)] = true;\n              DFS(property, callback, i, visited);\n            }\n          }\n        }\n      }\n    },\n    plugins: {},\n    highlightAll: function highlightAll(async, callback) {\n      _.highlightAllUnder(document, async, callback);\n    },\n    highlightAllUnder: function highlightAllUnder(container, async, callback) {\n      var env = {\n        callback: callback,\n        selector: 'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'\n      };\n      _.hooks.run('before-highlightall', env);\n      var elements = container.querySelectorAll(env.selector);\n      for (var i = 0, element; element = elements[i++];) {\n        _.highlightElement(element, async === true, env.callback);\n      }\n    },\n    highlightElement: function highlightElement(element, async, callback) {\n      // Find language\n      var language = 'none',\n        grammar,\n        parent = element;\n      while (parent && !lang.test(parent.className)) {\n        parent = parent.parentNode;\n      }\n      if (parent) {\n        language = (parent.className.match(lang) || [, 'none'])[1].toLowerCase();\n        grammar = _.languages[language];\n      }\n\n      // Set language on the element, if not present\n      element.className = element.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\n      if (element.parentNode) {\n        // Set language on the parent, for styling\n        parent = element.parentNode;\n        if (/pre/i.test(parent.nodeName)) {\n          parent.className = parent.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\n        }\n      }\n      var code = element.textContent;\n      var env = {\n        element: element,\n        language: language,\n        grammar: grammar,\n        code: code\n      };\n      var insertHighlightedCode = function insertHighlightedCode(highlightedCode) {\n        env.highlightedCode = highlightedCode;\n        _.hooks.run('before-insert', env);\n        env.element.innerHTML = env.highlightedCode;\n        _.hooks.run('after-highlight', env);\n        _.hooks.run('complete', env);\n        callback && callback.call(env.element);\n      };\n      _.hooks.run('before-sanity-check', env);\n      if (!env.code) {\n        _.hooks.run('complete', env);\n        return;\n      }\n      _.hooks.run('before-highlight', env);\n      if (!env.grammar) {\n        insertHighlightedCode(_.util.encode(env.code));\n        return;\n      }\n      if (async && _self.Worker) {\n        var worker = new Worker(_.filename);\n        worker.onmessage = function (evt) {\n          insertHighlightedCode(evt.data);\n        };\n        worker.postMessage(JSON.stringify({\n          language: env.language,\n          code: env.code,\n          immediateClose: true\n        }));\n      } else {\n        insertHighlightedCode(_.highlight(env.code, env.grammar, env.language));\n      }\n    },\n    highlight: function highlight(text, grammar, language) {\n      var env = {\n        code: text,\n        grammar: grammar,\n        language: language\n      };\n      _.hooks.run('before-tokenize', env);\n      env.tokens = _.tokenize(env.code, env.grammar);\n      _.hooks.run('after-tokenize', env);\n      return Token.stringify(_.util.encode(env.tokens), env.language);\n    },\n    matchGrammar: function matchGrammar(text, strarr, grammar, index, startPos, oneshot, target) {\n      for (var token in grammar) {\n        if (!grammar.hasOwnProperty(token) || !grammar[token]) {\n          continue;\n        }\n        if (token == target) {\n          return;\n        }\n        var patterns = grammar[token];\n        patterns = _.util.type(patterns) === \"Array\" ? patterns : [patterns];\n        for (var j = 0; j < patterns.length; ++j) {\n          var pattern = patterns[j],\n            inside = pattern.inside,\n            lookbehind = !!pattern.lookbehind,\n            greedy = !!pattern.greedy,\n            lookbehindLength = 0,\n            alias = pattern.alias;\n          if (greedy && !pattern.pattern.global) {\n            // Without the global flag, lastIndex won't work\n            var flags = pattern.pattern.toString().match(/[imuy]*$/)[0];\n            pattern.pattern = RegExp(pattern.pattern.source, flags + \"g\");\n          }\n          pattern = pattern.pattern || pattern;\n\n          // Don’t cache length as it changes during the loop\n          for (var i = index, pos = startPos; i < strarr.length; pos += strarr[i].length, ++i) {\n            var str = strarr[i];\n            if (strarr.length > text.length) {\n              // Something went terribly wrong, ABORT, ABORT!\n              return;\n            }\n            if (str instanceof Token) {\n              continue;\n            }\n            if (greedy && i != strarr.length - 1) {\n              pattern.lastIndex = pos;\n              var match = pattern.exec(text);\n              if (!match) {\n                break;\n              }\n              var from = match.index + (lookbehind ? match[1].length : 0),\n                to = match.index + match[0].length,\n                k = i,\n                p = pos;\n              for (var len = strarr.length; k < len && (p < to || !strarr[k].type && !strarr[k - 1].greedy); ++k) {\n                p += strarr[k].length;\n                // Move the index i to the element in strarr that is closest to from\n                if (from >= p) {\n                  ++i;\n                  pos = p;\n                }\n              }\n\n              // If strarr[i] is a Token, then the match starts inside another Token, which is invalid\n              if (strarr[i] instanceof Token) {\n                continue;\n              }\n\n              // Number of tokens to delete and replace with the new match\n              delNum = k - i;\n              str = text.slice(pos, p);\n              match.index -= pos;\n            } else {\n              pattern.lastIndex = 0;\n              var match = pattern.exec(str),\n                delNum = 1;\n            }\n            if (!match) {\n              if (oneshot) {\n                break;\n              }\n              continue;\n            }\n            if (lookbehind) {\n              lookbehindLength = match[1] ? match[1].length : 0;\n            }\n            var from = match.index + lookbehindLength,\n              match = match[0].slice(lookbehindLength),\n              to = from + match.length,\n              before = str.slice(0, from),\n              after = str.slice(to);\n            var args = [i, delNum];\n            if (before) {\n              ++i;\n              pos += before.length;\n              args.push(before);\n            }\n            var wrapped = new Token(token, inside ? _.tokenize(match, inside) : match, alias, match, greedy);\n            args.push(wrapped);\n            if (after) {\n              args.push(after);\n            }\n            Array.prototype.splice.apply(strarr, args);\n            if (delNum != 1) _.matchGrammar(text, strarr, grammar, i, pos, true, token);\n            if (oneshot) break;\n          }\n        }\n      }\n    },\n    tokenize: function tokenize(text, grammar) {\n      var strarr = [text];\n      var rest = grammar.rest;\n      if (rest) {\n        for (var token in rest) {\n          grammar[token] = rest[token];\n        }\n        delete grammar.rest;\n      }\n      _.matchGrammar(text, strarr, grammar, 0, 0, false);\n      return strarr;\n    },\n    hooks: {\n      all: {},\n      add: function add(name, callback) {\n        var hooks = _.hooks.all;\n        hooks[name] = hooks[name] || [];\n        hooks[name].push(callback);\n      },\n      run: function run(name, env) {\n        var callbacks = _.hooks.all[name];\n        if (!callbacks || !callbacks.length) {\n          return;\n        }\n        for (var i = 0, callback; callback = callbacks[i++];) {\n          callback(env);\n        }\n      }\n    },\n    Token: Token\n  };\n  _self.Prism = _;\n  function Token(type, content, alias, matchedStr, greedy) {\n    this.type = type;\n    this.content = content;\n    this.alias = alias;\n    // Copy of the full string this token was created from\n    this.length = (matchedStr || \"\").length | 0;\n    this.greedy = !!greedy;\n  }\n  Token.stringify = function (o, language) {\n    if (typeof o == 'string') {\n      return o;\n    }\n    if (Array.isArray(o)) {\n      return o.map(function (element) {\n        return Token.stringify(element, language);\n      }).join('');\n    }\n    var env = {\n      type: o.type,\n      content: Token.stringify(o.content, language),\n      tag: 'span',\n      classes: ['token', o.type],\n      attributes: {},\n      language: language\n    };\n    if (o.alias) {\n      var aliases = Array.isArray(o.alias) ? o.alias : [o.alias];\n      Array.prototype.push.apply(env.classes, aliases);\n    }\n    _.hooks.run('wrap', env);\n    var attributes = Object.keys(env.attributes).map(function (name) {\n      return name + '=\"' + (env.attributes[name] || '').replace(/\"/g, '&quot;') + '\"';\n    }).join(' ');\n    return '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\"' + (attributes ? ' ' + attributes : '') + '>' + env.content + '</' + env.tag + '>';\n  };\n  if (!_self.document) {\n    if (!_self.addEventListener) {\n      // in Node.js\n      return _;\n    }\n    if (!_.disableWorkerMessageHandler) {\n      // In worker\n      _self.addEventListener('message', function (evt) {\n        var message = JSON.parse(evt.data),\n          lang = message.language,\n          code = message.code,\n          immediateClose = message.immediateClose;\n        _self.postMessage(_.highlight(code, _.languages[lang], lang));\n        if (immediateClose) {\n          _self.close();\n        }\n      }, false);\n    }\n    return _;\n  }\n\n  //Get current script and highlight\n  var script = document.currentScript || [].slice.call(document.getElementsByTagName(\"script\")).pop();\n  if (script) {\n    _.filename = script.src;\n    if (!_.manual && !script.hasAttribute('data-manual')) {\n      if (document.readyState !== \"loading\") {\n        if (window.requestAnimationFrame) {\n          window.requestAnimationFrame(_.highlightAll);\n        } else {\n          window.setTimeout(_.highlightAll, 16);\n        }\n      } else {\n        document.addEventListener('DOMContentLoaded', _.highlightAll);\n      }\n    }\n  }\n  return _;\n}(_self);\nif (typeof module !== 'undefined' && module.exports) {\n  module.exports = Prism;\n}\n\n// hack for components to work correctly in node.js\nif (typeof global !== 'undefined') {\n  global.Prism = Prism;\n}","'use strict';\n\n/* global window, self */\nvar restore = capture();\n\n// istanbul ignore next - Don't allow Prism to run on page load in browser or\n// to start messaging from workers.\nvar ctx = typeof window === 'undefined' ? typeof self === 'undefined' ? {} : self : window;\nctx.Prism = {\n  manual: true,\n  disableWorkerMessageHandler: true\n};\n\n// Load all stuff in `prism.js` itself, except for `prism-file-highlight.js`.\n// The wrapped non-leaky grammars are loaded instead of Prism’s originals.\nvar h = require('hastscript');\nvar decode = require('parse-entities');\nvar Prism = require('prismjs/components/prism-core');\nvar markup = require('./lang/markup');\nvar css = require('./lang/css');\nvar clike = require('./lang/clike');\nvar js = require('./lang/javascript');\nrestore();\nvar own = {}.hasOwnProperty;\n\n// Inherit.\nfunction Refractor() {}\nRefractor.prototype = Prism;\n\n// Construct.\nvar refract = new Refractor();\n\n// Expose.\nmodule.exports = refract;\n\n// Create.\nrefract.highlight = highlight;\nrefract.register = register;\nrefract.alias = alias;\nrefract.registered = registered;\nrefract.listLanguages = listLanguages;\n\n// Register bundled grammars.\nregister(markup);\nregister(css);\nregister(clike);\nregister(js);\nrefract.util.encode = encode;\nrefract.Token.stringify = stringify;\nfunction register(grammar) {\n  if (typeof grammar !== 'function' || !grammar.displayName) {\n    throw new Error('Expected `function` for `grammar`, got `' + grammar + '`');\n  }\n\n  // Do not duplicate registrations.\n  if (refract.languages[grammar.displayName] === undefined) {\n    grammar(refract);\n  }\n}\nfunction alias(name, alias) {\n  var languages = refract.languages;\n  var map = name;\n  var key;\n  var list;\n  var length;\n  var index;\n  if (alias) {\n    map = {};\n    map[name] = alias;\n  }\n  for (key in map) {\n    list = map[key];\n    list = typeof list === 'string' ? [list] : list;\n    length = list.length;\n    index = -1;\n    while (++index < length) {\n      languages[list[index]] = languages[key];\n    }\n  }\n}\nfunction highlight(value, name) {\n  var sup = Prism.highlight;\n  var grammar;\n  if (typeof value !== 'string') {\n    throw new Error('Expected `string` for `value`, got `' + value + '`');\n  }\n\n  // `name` is a grammar object.\n  if (refract.util.type(name) === 'Object') {\n    grammar = name;\n    name = null;\n  } else {\n    if (typeof name !== 'string') {\n      throw new Error('Expected `string` for `name`, got `' + name + '`');\n    }\n    if (own.call(refract.languages, name)) {\n      grammar = refract.languages[name];\n    } else {\n      throw new Error('Unknown language: `' + name + '` is not registered');\n    }\n  }\n  return sup.call(this, value, grammar, name);\n}\nfunction registered(language) {\n  if (typeof language !== 'string') {\n    throw new Error('Expected `string` for `language`, got `' + language + '`');\n  }\n  return own.call(refract.languages, language);\n}\nfunction listLanguages() {\n  var languages = refract.languages;\n  var list = [];\n  var language;\n  for (language in languages) {\n    if (own.call(languages, language) && typeof languages[language] === 'object') {\n      list.push(language);\n    }\n  }\n  return list;\n}\nfunction stringify(value, language, parent) {\n  var env;\n  if (typeof value === 'string') {\n    return {\n      type: 'text',\n      value: value\n    };\n  }\n  if (refract.util.type(value) === 'Array') {\n    return stringifyAll(value, language);\n  }\n  env = {\n    type: value.type,\n    content: refract.Token.stringify(value.content, language, parent),\n    tag: 'span',\n    classes: ['token', value.type],\n    attributes: {},\n    language: language,\n    parent: parent\n  };\n  if (value.alias) {\n    env.classes = env.classes.concat(value.alias);\n  }\n  refract.hooks.run('wrap', env);\n  return h(env.tag + '.' + env.classes.join('.'), attributes(env.attributes), env.content);\n}\nfunction stringifyAll(values, language) {\n  var result = [];\n  var length = values.length;\n  var index = -1;\n  var value;\n  while (++index < length) {\n    value = values[index];\n    if (value !== '' && value !== null && value !== undefined) {\n      result.push(value);\n    }\n  }\n  index = -1;\n  length = result.length;\n  while (++index < length) {\n    value = result[index];\n    result[index] = refract.Token.stringify(value, language, result);\n  }\n  return result;\n}\nfunction encode(tokens) {\n  return tokens;\n}\nfunction attributes(attrs) {\n  var key;\n  for (key in attrs) {\n    attrs[key] = decode(attrs[key]);\n  }\n  return attrs;\n}\nfunction capture() {\n  var defined = ('Prism' in global);\n  /* istanbul ignore next */\n  var current = defined ? global.Prism : undefined;\n  return restore;\n  function restore() {\n    /* istanbul ignore else - Clean leaks after Prism. */\n    if (defined) {\n      global.Prism = current;\n    } else {\n      delete global.Prism;\n    }\n    defined = undefined;\n    current = undefined;\n  }\n}"],"sourceRoot":""}